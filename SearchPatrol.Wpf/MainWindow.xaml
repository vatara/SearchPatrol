<Window x:Class="SearchPatrol.Wpf.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SearchPatrol.Wpf"
        xmlns:simco="clr-namespace:Microsoft.FlightSimulator.SimConnect;assembly=Microsoft.FlightSimulator.SimConnect"
        xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Title="MainWindow" Height="413.5" Width="383.5" ResizeMode="NoResize">

    <StackPanel Margin="20,20,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Width="337">
        <StackPanel Orientation="Horizontal">
            <Label Content="MSFS Connection"></Label>
            <Ellipse Height="14" Stroke="Black" Width="14">
                <Ellipse.Style>
                    <Style TargetType="Ellipse">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding bConnected}" Value="false">
                                <Setter Property="Fill" Value="#FFFF5030" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding bConnected}" Value="true">
                                <Setter Property="Fill" Value="#FF50FF30" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding bOddTick}" Value="true">
                                <!-- Assume bOddTick is true only when bConnected is true-->
                                <Setter Property="Fill" Value="#FF45E2F4" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Ellipse.Style>
            </Ellipse>
        </StackPanel>

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
            </Grid.RowDefinitions>

            <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="0">
                <Label Content="Min Range"></Label>
                <Label Content="{Binding minRange.Value, StringFormat=N1}" MinWidth="50"></Label>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="1" MinWidth="50">
                <Label Content="Max Range"></Label>
                <Label Content="{Binding maxRange.Value, StringFormat=N1}"></Label>
            </StackPanel>
            <Slider Value="{Binding minRange.Value, Mode=TwoWay}" Minimum="0" Maximum="100" SmallChange="1" LargeChange="10" Grid.Row="1" Grid.Column="0"/>
            <Slider Value="{Binding maxRange.Value, Mode=TwoWay}" Minimum="0" Maximum="100" SmallChange="1" LargeChange="10" Grid.Row="1" Grid.Column="1"/>
        </Grid>

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
            </Grid.RowDefinitions>

            <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="0">
                <Label Content="Target Direction"></Label>
                <Label Content="{Binding targetDirection.Value}" MinWidth="50"></Label>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="1" MinWidth="50">
                <Label Content="Direction Randomness"></Label>
                <Label Content="{Binding directionRandomness.Value}"></Label>
            </StackPanel>
            <Slider Value="{Binding targetDirection.Value, Mode=TwoWay}" Minimum="0" Maximum="360" SmallChange="1" LargeChange="10" Grid.Row="1" Grid.Column="0"/>
            <Slider Value="{Binding directionRandomness.Value, Mode=TwoWay}" Minimum="0" Maximum="360" SmallChange="1" LargeChange="10" Grid.Row="1" Grid.Column="1"/>        </Grid>

        <Border Height="10"></Border>

        <Button x:Name="placeTargetButton" Content="Place Target" Command="{Binding cmdPlaceTarget}" IsEnabled="{Binding bConnected}" Width="100" HorizontalAlignment="Left" />
        <Label Content="Status"></Label>
        <Label Content="{Binding statusText.Value}" Width="Auto" />

        <StackPanel Orientation="Horizontal">
            <Label Content="Wing Wave"></Label>
            <Ellipse Height="14" Stroke="Black" Width="14">
                <Ellipse.Style>
                    <Style TargetType="Ellipse">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding wingWave.Value}" Value="false">
                                <Setter Property="Fill" Value="#FFFF5030" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding wingWave.Value}" Value="true">
                                <Setter Property="Fill" Value="#FF50FF30" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Ellipse.Style>
            </Ellipse>
        </StackPanel>
    </StackPanel>
</Window>
